<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCuRXhpZgAATU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAAZKG
        AAcAAAB6AAAALAAAAABVTklDT0RFAABDAFIARQBBAFQATwBSADoAIABnAGQALQBqAHAAZQBnACAAdgAx
        AC4AMAAgACgAdQBzAGkAbgBnACAASQBKAEcAIABKAFAARQBHACAAdgA2ADIAKQAsACAAcQB1AGEAbABp
        AHQAeQAgAD0AIAA4ADIACv/bAEMABgQEBQQEBgUFBQYGBgcJDgkJCAgJEg0NCg4VEhYWFRIUFBcaIRwX
        GB8ZFBQdJx0fIiMlJSUWHCksKCQrISQlJP/bAEMBBgYGCQgJEQkJESQYFBgkJCQkJCQkJCQkJCQkJCQk
        JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJP/AABEIALIA7gMBIgACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/2gAMAwEAAhEDEQA/AOCBpc03NKDX358S0PBpQaZTgaCGh4NKDTAaXNMzaH0oNNBpRQQ0PBp1
        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
        P0oor0D5mmc8K0rUAQLgUUVzUtz2K3wn/9k=
</value>
  </data>
</root>